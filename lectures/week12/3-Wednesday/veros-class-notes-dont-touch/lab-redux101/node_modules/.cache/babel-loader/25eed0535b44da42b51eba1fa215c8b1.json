{"ast":null,"code":"var _jsxFileName = \"/Users/veronicalino/Documents/digitalCrafts/july2022/lectures/week12/3-Wednesday/veros-class-notes-dont-touch/lab-redux101/src/components/CountHooks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CountHooks = () => {\n  _s();\n\n  const count = useSelector(state => state.count); // count is mapped from global state\n\n  const dispatch = useDispatch(); //\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: count\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Increment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CountHooks, \"Hx8ZS0E5Jr/6DPTYqq8Q1lSknko=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CountHooks;\nexport default CountHooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"CountHooks\");","map":{"version":3,"sources":["/Users/veronicalino/Documents/digitalCrafts/july2022/lectures/week12/3-Wednesday/veros-class-notes-dont-touch/lab-redux101/src/components/CountHooks.js"],"names":["React","useDispatch","useSelector","CountHooks","count","state","dispatch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAEvB,QAAMC,KAAK,GAAGF,WAAW,CAACG,KAAK,IAAIA,KAAK,CAACD,KAAhB,CAAzB,CAFuB,CAEyB;;AAChD,QAAME,QAAQ,GAAGL,WAAW,EAA5B,CAHuB,CAGU;;AACjC,sBACE;AAAA,4BAEE;AAAA,gBAAKG;AAAL;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD,CAZD;;GAAMD,U;UAEUD,W,EACGD,W;;;KAHbE,U;AAcN,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport {useDispatch, useSelector} from 'react-redux'\n\nconst CountHooks = () => {\n\n  const count = useSelector(state => state.count) // count is mapped from global state\n  const dispatch = useDispatch()   //\n  return (\n    <>\n      \n      <h2>{count}</h2>\n\n      <button>Increment</button>\n    </>\n  )\n}\n\nexport default CountHooks\n"]},"metadata":{},"sourceType":"module"}